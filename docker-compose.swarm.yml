services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: feedback_hub
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - appnet

  redis:
    image: redis:latest
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - appnet

  backend:
    image: taans/nodejs-midterm-backend:latest
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    env_file:
      - ./backend/.env.docker
    depends_on:
      - db
      - redis
    networks:
      - appnet

  nginx:
    image: nginx:latest
    ports:
      - "5000:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
    networks:
      - appnet
    deploy:
      replicas: 1

  frontend:
    image: taans/nodejs-midterm-frontend:latest
    ports:
      - "5173:5173"
    restart: unless-stopped
    networks:
      - appnet

volumes:
  db_data:
  redis_data:

networks:
  appnet:
    driver: overlay